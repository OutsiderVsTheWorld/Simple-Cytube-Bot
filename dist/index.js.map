{"version":3,"sources":["util/message-filter.js","util/stringifyStyles.js","Command.js","commands/dice.js","index.js"],"names":["msg","replace","trim","styles","style","styleString","Object","entries","reduce","propName","propValue","Command","config","assign","text","handler","params","data","condition","Number","isInteger","randomInteger","min","max","rand","Math","random","floor","normalizeParams","map","param","number","parseInt","isNaN","bot","sendMessage","num","username","Bot","name","cmdFilterPrefix","commands","messageStyles","message","display","color","botSendMessage","registerListeners","socket","registerDefaultCommnds","applyBotMessageStyles","console","log","on","window","LASTCHAT","commandDispatch","commandRegister","CommandDice","elementStyle","document","createElement","nameStyles","innerHTML","head","appendChild","push","split","cmdText","shift","slice","find","cmd","recieve","CLIENT","formatedMessage","emit"],"mappings":";AAYC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAZc,IAAA,EAAA,SAACA,GACPA,OAAAA,EACJC,QAAQ,SACRA,KAAAA,QAAQ,SAAW,KACnBA,QAAQ,QAAW,KACnBA,QAAQ,QAAW,KACnBA,QAAQ,UAAW,KACnBA,QAAQ,SAAW,KACnBA,QAAQ,SAAW,KACnBA,QAAQ,gBAAiB,IACzBA,QAAQ,WAAY,IACpBC,QACJ,QAAA,QAAA;;ACFA,aAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAVc,IAAA,EAAA,SAAAC,GACTC,IAAAA,EAAaD,EAAAA,GAAAA,GAQVE,OALLC,OAAOC,QAAQH,GAAOI,OAAO,SAACH,EAAuC,GAAA,IAAA,EAAA,EAAA,EAAA,GAAzBI,EAAyB,EAAA,GAAfC,EAAe,EAAA,GACzDL,MAAAA,GAAAA,OAAAA,GAAcI,OAAAA,EAAYC,KAAAA,OAAAA,EAApC,MACC,KAIN,QAAA,QAAA;;ACGcC,aAAAA,SAAAA,EAAAA,EAAAA,GAAAA,KAAAA,aAAAA,GAAAA,MAAAA,IAAAA,UAAAA,qCAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,EAAAA,aAAAA,EAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,UAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,EAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAbTA,IAAAA,EAAAA,WACQC,SAAAA,EAAAA,GAAQ,EAAA,KAAA,GAClBN,OAAOO,OAAO,KAAM,CAClBC,KAAM,GACNC,QAAS,cACRH,GAQQD,OAAAA,EAAAA,EAAAA,CAAAA,CAAAA,IAAAA,UALLK,MAAAA,SAAAA,EAAQC,GACTF,KAAAA,QAAQC,EAAQC,OAIVN,EAbTA,GAaSA,EAAAA,EAAAA,QAAAA,QAAAA;;ACCA,aAdf,SAASO,EAAUF,GAEd,OAACA,IACAG,OAAOC,UAAUJ,EAAO,MACxBG,OAAOC,UAAUJ,EAAO,KACzBA,EAAO,GAAKA,EAAO,GAIxB,SAASK,EAAcC,EAAKC,GACtBC,IAAAA,EAAOF,EAAMG,KAAKC,UAAYH,EAAM,EAAID,GACrCG,OAAAA,KAAKE,MAAMH,GAGL,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACbV,KAAM,OACNC,QAAS,SAACC,EAAQC,GACZW,IAAAA,EAAkBZ,EAAOa,IAAI,SAAAC,GAC3BC,IAAAA,EAASC,SAASF,GACfG,OAAAA,MAAMF,GAAUD,EAAQC,IAG7Bb,GAAAA,EAAUU,GACLX,OAAAA,EAAKiB,IAAIC,YAAY,oCAG1Bb,IAEAc,EAAMf,EAFAO,EAAgB,GAChBA,EAAgB,IAG1BX,EAAKiB,IAAIC,YAAelB,GAAAA,OAAAA,EAAKoB,SAAoCD,6BAAAA,OAAAA,MAhBtD,QAAA,QAAA;;AC4Ef,aA1FA,IAAA,EAAA,EAAA,QAAA,0BACA,EAAA,EAAA,QAAA,2BAEA,EAAA,EAAA,QAAA,cAEA,EAAA,EAAA,QAAA,oBAqFA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAnFME,IAAAA,EAAAA,WACQ1B,SAAAA,EAAAA,GAAQ,EAAA,KAAA,GAClBN,OAAOO,OAAO,KAAM,CAClB0B,KAAM,WACNC,gBAAiB,IACjBC,SAAU,GACVC,cAAe,CACbC,QAAS,CACPC,QAAS,UAEXL,KAAM,CACJM,MAAO,UAGVjC,GAEEkC,KAAAA,gBAAiB,EAEjBC,KAAAA,kBAAkBnC,EAAOoC,QACzBC,KAAAA,yBACAC,KAAAA,wBAELC,QAAQC,IAAI,6CA6DhB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,oBA1DoBJ,MAAAA,SAAAA,GAAQ,IAAA,EAAA,KACxBA,EAAOK,GAAG,UAAW,SAAApC,GACf,EAAK6B,iBACPQ,OAAOC,SAAShB,KAAO,GACvB,EAAKO,gBAAiB,GAGpB7B,EAAKjB,IAAI,KAAO,EAAKwC,iBACvB,EAAKgB,gBAAgBvC,OAkD7B,CAAA,IAAA,yBA7C2B,MAAA,WAClBwC,KAAAA,gBAAgB,IAAI9C,EAAJ,QAAY+C,EAAZ,YA4CzB,CAAA,IAAA,wBAzC0B,MAAA,WAClBC,IAAAA,EAAeC,SAASC,cAAc,SACtCnB,GAAgB,EAAgB,EAAA,SAAA,KAAKA,cAAcC,SACnDmB,GAAa,EAAgB,EAAA,SAAA,KAAKpB,cAAcH,MAEpDoB,EAAaI,UAAY,kCACzBJ,EAAaI,WAAgCrB,mBAAAA,OAAAA,EAA7C,MACAiB,EAAaI,WAA4BD,eAAAA,OAAAA,EAAzC,MAEAF,SAASI,KAAKC,YAAYN,KAgC9B,CAAA,IAAA,kBA7BkB/C,MAAAA,SAAAA,GACT6B,KAAAA,SAASyB,KAAK,IAAIvD,EAAJ,QAAYC,MA4BnC,CAAA,IAAA,kBAzBkBK,MAAAA,SAAAA,GAAM,IAAA,EAAA,KAChBkD,GAAQ,EAAclD,EAAAA,SAAAA,EAAKjB,KAAKmE,MAAM,KACtCC,EAAUD,EAAME,QAAQC,MAAM,GAC9BtD,EAASmD,EAER1B,KAAAA,SAAS8B,KAAK,SAAAC,GACbA,EAAI1D,OAASsD,IACfnD,EAAKiB,IAAM,EAEXsC,EAAIC,QAAQzD,EAAQC,QAgB5B,CAAA,IAAA,cAXc0B,MAAAA,SAAAA,GACNW,GAAAA,OAAOoB,OAAOnC,OAASe,OAAOC,SAAShB,KAAM,CAC3CoC,IAAAA,EAAsC,oBAAA,OAAA,KAAKpC,KAAmBI,gBAAAA,OAAAA,EAAlE,aACKK,KAAAA,OAAO4B,KAAK,UAAW,CAAE5E,IAAK2E,IAGhC7B,KAAAA,gBAAiB,MAK1B,EAnFMR,GAmFNgB,OAAOpB,IAAM,IAAII,EAAI,CAACU,OAAQM,OAAON","file":"index.js","sourceRoot":"..\\src","sourcesContent":["export default (msg) => {\r\n  return msg\r\n    .replace(/&#39;/g,  `'`)\r\n    .replace(/&amp;/g,  '&')\r\n    .replace(/&lt;/g,   '<')\r\n    .replace(/&gt;/g,   '>')\r\n    .replace(/&quot;/g, '\"')\r\n    .replace(/&#40;/g,  '(')\r\n    .replace(/&#41;/g,  ')')\r\n    .replace(/(<([^>]+)>)/ig, '')\r\n    .replace(/^[ \\t]+/g, '')\r\n    .trim()\r\n}","export default styles => {\r\n  let style = { ...styles };\r\n  \r\n  let styleString = (\r\n    Object.entries(style).reduce((styleString, [propName, propValue]) => {\r\n      return `${styleString}${propName}:${propValue};`;\r\n    }, '')\r\n  );\r\n\r\n  return styleString\r\n}","class Command {\r\n  constructor(config) {\r\n    Object.assign(this, {\r\n      text: \"\",\r\n      handler: () => {}\r\n    }, config)\r\n  }\r\n\r\n  recieve(params, data) {\r\n    this.handler(params, data)\r\n  }\r\n}\r\n\r\nexport default Command;","function condition(params) {\r\n  return (\r\n    (!params) ||\r\n    (!Number.isInteger(params[0])) ||\r\n    (!Number.isInteger(params[1])) ||\r\n    (params[0] > params[1])\r\n  )\r\n}\r\n\r\nfunction randomInteger(min, max) {\r\n  let rand = min + Math.random() * (max + 1 - min);\r\n  return Math.floor(rand);\r\n}\r\n\r\nexport default {\r\n  text: \"dice\",\r\n  handler: (params, data) => {\r\n    let normalizeParams = params.map(param => {\r\n      let number = parseInt(param);\r\n      return isNaN(number) ? param : number;\r\n    });\r\n\r\n    if (condition(normalizeParams)) {\r\n      return data.bot.sendMessage(\"Использование: !dice <min> <max>\")\r\n    }\r\n\r\n    let min = normalizeParams[0]\r\n    let max = normalizeParams[1]\r\n    let num = randomInteger(min, max)\r\n\r\n    data.bot.sendMessage(`${data.username} бросает кости... Выпало ${num}`)\r\n  }\r\n}","import filterMessage from \"./util/message-filter\"\r\nimport stringifyStyles from \"./util/stringifyStyles\"\r\n\r\nimport Command from \"./Command\"\r\n\r\nimport CommandDice from \"./commands/dice\"\r\n\r\nclass Bot {\r\n  constructor(config) {\r\n    Object.assign(this, {\r\n      name: \"Пидораха\",\r\n      cmdFilterPrefix: \"!\",\r\n      commands: [],\r\n      messageStyles: {\r\n        message: {\r\n          display: \"inline\"\r\n        },\r\n        name: {\r\n          color: \"pink\"\r\n        }\r\n      }\r\n    }, config)\r\n\r\n    this.botSendMessage = false\r\n\r\n    this.registerListeners(config.socket)\r\n    this.registerDefaultCommnds()\r\n    this.applyBotMessageStyles()\r\n\r\n    console.log(\"Simple Cytube Bot successfuly initialzed!\")\r\n  }\r\n\r\n  registerListeners(socket) {\r\n    socket.on(\"chatMsg\", data => {\r\n      if (this.botSendMessage) {\r\n        window.LASTCHAT.name = \"\"\r\n        this.botSendMessage = false\r\n      }\r\n\r\n      if (data.msg[0] === this.cmdFilterPrefix) {\r\n        this.commandDispatch(data)\r\n      }\r\n    })\r\n  }\r\n\r\n  registerDefaultCommnds() {\r\n    this.commandRegister(new Command(CommandDice))\r\n  }\r\n\r\n  applyBotMessageStyles() {\r\n    let elementStyle = document.createElement(\"style\");\r\n    let messageStyles = stringifyStyles(this.messageStyles.message)\r\n    let nameStyles = stringifyStyles(this.messageStyles.name)\r\n\r\n    elementStyle.innerHTML = \"/* Simple Cytube Bot Styles */ \"\r\n    elementStyle.innerHTML += `.chat-msg-bot { ${messageStyles} }`\r\n    elementStyle.innerHTML += `.bot-name { ${nameStyles} }`\r\n\r\n    document.head.appendChild(elementStyle)\r\n  }\r\n\r\n  commandRegister(config) {\r\n    this.commands.push(new Command(config))\r\n  }\r\n\r\n  commandDispatch(data) {\r\n    let split = filterMessage(data.msg).split(\" \")\r\n    let cmdText = split.shift().slice(1)\r\n    let params = split\r\n\r\n    this.commands.find(cmd => {\r\n      if (cmd.text === cmdText) {\r\n        data.bot = this;\r\n\r\n        cmd.recieve(params, data)\r\n      }\r\n    })\r\n  }\r\n\r\n  sendMessage(message) {\r\n    if (window.CLIENT.name === window.LASTCHAT.name) {\r\n      let formatedMessage = `[botmsg][botname]${this.name}: [/botname]${message}[/botmsg]`\r\n      this.socket.emit(\"chatMsg\", { msg: formatedMessage })\r\n    }\r\n\r\n    this.botSendMessage = true\r\n  }\r\n}\r\n\r\n//window.SimpleCytubeBot = Bot;\r\nwindow.bot = new Bot({socket: window.socket})"]}