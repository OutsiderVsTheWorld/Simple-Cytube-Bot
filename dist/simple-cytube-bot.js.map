{"version":3,"sources":["util/message-filter.js","util/stringifyStyles.js","Command.js","util/random-int.js","commands/dice.js","commands/webm.js","commands/who.js","simple-cytube-bot.js"],"names":["msg","replace","trim","styles","style","styleString","Object","entries","reduce","propName","propValue","Command","config","assign","text","handler","params","data","min","max","rand","Math","random","floor","condition","Number","isInteger","normalizeParams","map","param","number","parseInt","isNaN","bot","sendMessage","username","num","CommandWebm","FETCH_PROXY","FILE_TYPE_WEBM","FILE_TYPE_MP4","FILE_TYPES","addMedia","user","video","window","CLIENT","name","socket","emit","id","path","title","fullname","pos","type","temp","getRandomWebm","thread","fetchVideosFromThread","then","videos","length","fetch","res","json","threads","posts","post","files","file","includes","push","slice","search","delay","count","timer","setTimeout","cb","clearTimeout","webm","catch","PREFIX","POSTFIX","userlistElems","document","getElementById","children","users","i","textContent","formatedMessage","join","Bot","cmdFilterPrefix","messageStyles","message","display","color","commands","botSendMessage","registerListeners","registerDefaultCommnds","applyBotMessageStyles","console","log","err","Error","on","LASTCHAT","commandDispatch","commandRegister","CommandDice","CommandWho","elementStyle","createElement","nameStyles","innerHTML","head","appendChild","split","cmdText","shift","find","cmd","recieve","SimpleCytubeBot"],"mappings":"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","file":"simple-cytube-bot.js","sourceRoot":"..\\src","sourcesContent":["export default (msg) => {\r\n  return msg\r\n    .replace(/&#39;/g,  `'`)\r\n    .replace(/&amp;/g,  '&')\r\n    .replace(/&lt;/g,   '<')\r\n    .replace(/&gt;/g,   '>')\r\n    .replace(/&quot;/g, '\"')\r\n    .replace(/&#40;/g,  '(')\r\n    .replace(/&#41;/g,  ')')\r\n    .replace(/(<([^>]+)>)/ig, '')\r\n    .replace(/^[ \\t]+/g, '')\r\n    .trim()\r\n}","export default styles => {\r\n  let style = { ...styles };\r\n  \r\n  let styleString = (\r\n    Object.entries(style).reduce((styleString, [propName, propValue]) => {\r\n      return `${styleString}${propName}:${propValue};`;\r\n    }, '')\r\n  );\r\n\r\n  return styleString\r\n}","class Command {\r\n  constructor(config) {\r\n    Object.assign(this, {\r\n      text: \"\",\r\n      handler: () => {}\r\n    }, config)\r\n  }\r\n\r\n  recieve(params, data) {\r\n    this.handler(params, data)\r\n  }\r\n}\r\n\r\nexport default Command;","export default (min, max) => {\r\n  let rand = min + Math.random() * (max + 1 - min);\r\n  return Math.floor(rand);\r\n}","import randomInteger from \"../util/random-int\"\r\n\r\nfunction condition(params) {\r\n  return (\r\n    (!params) ||\r\n    (!Number.isInteger(params[0])) ||\r\n    (!Number.isInteger(params[1])) ||\r\n    (params[0] > params[1])\r\n  )\r\n}\r\n\r\nexport default {\r\n  text: \"dice\",\r\n  handler: (params, data) => {\r\n    let normalizeParams = params.map(param => {\r\n      let number = parseInt(param);\r\n      return isNaN(number) ? param : number;\r\n    });\r\n\r\n    if (condition(normalizeParams)) {\r\n      return data.bot.sendMessage(`${data.username}: используй !dice <min> <max>`)\r\n    }\r\n\r\n    let min = normalizeParams[0]\r\n    let max = normalizeParams[1]\r\n    let num = randomInteger(min, max)\r\n\r\n    data.bot.sendMessage(`${data.username} бросает кости... Выпало ${num}`)\r\n  }\r\n}","import randomInteger from \"../util/random-int\"\r\n\r\nconst FETCH_PROXY = \"https://yacdn.org/serve/\"\r\n\r\nconst FILE_TYPE_WEBM = 6\r\nconst FILE_TYPE_MP4 = 10\r\n\r\nconst FILE_TYPES = [FILE_TYPE_WEBM, FILE_TYPE_MP4]\r\n\r\nfunction addMedia(params) {\r\n  const {user, video} = params\r\n\r\n  if (window.CLIENT.name === user) {\r\n    window.socket.emit(\"queue\", {\r\n      id: `https://2ch.hk${video.path}`,\r\n      title: video.fullname,\r\n      pos: \"end\",\r\n      type: \"fi\",\r\n      temp: true\r\n    })\r\n  }\r\n}\r\n\r\nfunction getRandomWebm(thread) {\r\n  return fetchVideosFromThread(thread).then(videos => {\r\n    return videos[randomInteger(0, videos.length - 1)]\r\n  })\r\n}\r\n\r\nfunction fetchVideosFromThread(thread) {\r\n  let videos = []\r\n  return fetch(`${FETCH_PROXY}${thread}`)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      for (let post of data.threads[0].posts) {\r\n        for (let file of post.files) {\r\n          if (FILE_TYPES.includes(file.type)) {\r\n            videos.push(file)\r\n          }\r\n        }\r\n      }\r\n\r\n      return videos\r\n    })\r\n}\r\n\r\nconst CommandWebm = {\r\n  text: \"webm\",\r\n  handler: (params, data) => {\r\n    if (!params[0]) {\r\n      return data.bot.sendMessage(`${data.username}: используй !webm <thread> [all].`)\r\n    }\r\n\r\n    let thread = params[0].slice(0, params[0].search(\".html\"))\r\n    thread += \".json\"\r\n\r\n    if (params[1] === \"all\") {\r\n      fetchVideosFromThread(thread).then(videos => {\r\n        let delay = 1000.\r\n        let extraDelay = 3000.\r\n        let count = 0\r\n\r\n        let timer = setTimeout(function cb() {\r\n          addMedia({\r\n            user: data.username,\r\n            video: videos[count]\r\n          })\r\n\r\n          count++\r\n\r\n          if (count % 10 == 0) delay = extraDelay\r\n          else delay = 1000.\r\n\r\n          clearTimeout(timer)\r\n\r\n          if (count < videos.length) timer = setTimeout(cb, delay)\r\n        }, delay)\r\n      })\r\n    } else {\r\n      getRandomWebm(thread).then(webm => {\r\n        addMedia({\r\n          user: data.username,\r\n          video: webm\r\n        })\r\n      }).catch(() => {\r\n        data.bot.sendMessage(\"Ссылка всратая. Исправляй.\")\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default CommandWebm","import randomInteger from \"../util/random-int\"\r\n\r\nconst PREFIX = [\r\n  \"Так... Ну, \",\r\n  \"Этот ебучий  \"\r\n]\r\n\r\nconst POSTFIX = [\r\n  \", базарю!\",\r\n  \", дебильчики.\",\r\n  \", ослики.\"\r\n]\r\n\r\nexport default {\r\n  text: \"who\",\r\n  handler: (params, data) => {\r\n    if (!params[0]) {\r\n      return data.bot.sendMessage(`${data.username}: используй !who <something>.`)\r\n    }\r\n\r\n    const userlistElems = document.getElementById(\"userlist\").children;\r\n    const users = []\r\n    for (let i = 0; i < userlistElems.length; i++) {\r\n      users.push(userlistElems[i].children[1].textContent);\r\n    }\r\n\r\n    let formatedMessage = PREFIX[randomInteger(0, PREFIX.length-1)] +\r\n      `${users[randomInteger(0, users.length-1)]} — ${params.join(\" \")}` +\r\n      POSTFIX[randomInteger(0, POSTFIX.length-1)]\r\n\r\n    data.bot.sendMessage(formatedMessage)\r\n  }\r\n}","import filterMessage from \"./util/message-filter\"\r\nimport stringifyStyles from \"./util/stringifyStyles\"\r\n\r\nimport Command from \"./Command\"\r\n\r\nimport CommandDice from \"./commands/dice\"\r\nimport CommandWebm from \"./commands/webm\"\r\nimport CommandWho from \"./commands/who\"\r\n\r\nclass Bot {\r\n  constructor(config) {\r\n    Object.assign(this, {\r\n      name: \"Bot\",\r\n      cmdFilterPrefix: \"!\",\r\n      messageStyles: {\r\n        message: {\r\n          display: \"inline\"\r\n        },\r\n        name: {\r\n          color: \"pink\"\r\n        }\r\n      }\r\n    }, config)\r\n\r\n    this.commands = []\r\n    this.botSendMessage = false\r\n\r\n    try {\r\n      this.registerListeners(config.socket)\r\n      this.registerDefaultCommnds()\r\n      this.applyBotMessageStyles()\r\n\r\n      console.log(\"Simple Cytube Bot successfuly initialzed!\")\r\n    } catch (err) {\r\n      console.log(\"Simple Cytube Bot can't be initialzed.\")\r\n      \r\n      throw new Error(err)\r\n    }\r\n  }\r\n\r\n  registerListeners(socket) {\r\n    socket.on(\"chatMsg\", data => {\r\n      if (this.botSendMessage) {\r\n        window.LASTCHAT.name = \"\"\r\n        this.botSendMessage = false\r\n      }\r\n\r\n      if (data.msg[0] === this.cmdFilterPrefix) {\r\n        this.commandDispatch(data)\r\n      }\r\n    })\r\n  }\r\n\r\n  registerDefaultCommnds() {\r\n    this.commandRegister(CommandDice)\r\n    this.commandRegister(CommandWebm)\r\n    this.commandRegister(CommandWho)\r\n  }\r\n\r\n  applyBotMessageStyles() {\r\n    let elementStyle = document.createElement(\"style\");\r\n    let messageStyles = stringifyStyles(this.messageStyles.message)\r\n    let nameStyles = stringifyStyles(this.messageStyles.name)\r\n\r\n    elementStyle.innerHTML = \"/* Simple Cytube Bot Styles */ \"\r\n    elementStyle.innerHTML += `.chat-msg-bot { ${messageStyles} }`\r\n    elementStyle.innerHTML += `.bot-name { ${nameStyles} }`\r\n\r\n    document.head.appendChild(elementStyle)\r\n  }\r\n\r\n  commandRegister(config) {\r\n    this.commands.push(new Command(config))\r\n  }\r\n\r\n  commandDispatch(data) {\r\n    let split = filterMessage(data.msg).split(\" \")\r\n    let cmdText = split.shift().slice(1)\r\n    let params = split\r\n\r\n    this.commands.find(cmd => {\r\n      if (cmd.text === cmdText) {\r\n        data.bot = this;\r\n\r\n        cmd.recieve(params, data)\r\n      }\r\n    })\r\n  }\r\n\r\n  sendMessage(message) {\r\n    if (window.CLIENT.name === window.LASTCHAT.name) {\r\n      let formatedMessage = `[botmsg][botname]${this.name}: [/botname]${message}[/botmsg]`\r\n      this.socket.emit(\"chatMsg\", { msg: formatedMessage })\r\n    }\r\n\r\n    this.botSendMessage = true\r\n  }\r\n}\r\n\r\nwindow.SimpleCytubeBot = Bot;"]}